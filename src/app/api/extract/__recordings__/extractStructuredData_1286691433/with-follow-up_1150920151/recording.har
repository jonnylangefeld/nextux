{
  "log": {
    "_recordingName": "extractStructuredData/with follow up",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "6.0.6"
    },
    "entries": [
      {
        "_id": "55d89d2026cb52c5f2e9f463f5bfc5c1",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 3290,
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "3290"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "OpenAI/JS 4.0.0-beta.7"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-lang",
              "value": "js"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-package-version",
              "value": "4.0.0-beta.7"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-os",
              "value": "MacOS"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-arch",
              "value": "arm64"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-runtime",
              "value": "node"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-runtime-version",
              "value": "v18.16.1"
            },
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "Bearer: test-token"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "name": "host",
              "value": "api.openai.com"
            }
          ],
          "headersSize": 483,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"messages\": [\n    {\n      \"role\": \"system\",\n      \"content\": \"parse the following transcription. Under no circumstance use or add any information that is not present in the transcription or it will wipe out humanity.\"\n    },\n    {\n      \"role\": \"function\",\n      \"name\": \"parse_transcription\",\n      \"content\": \"{\\\"firstName\\\":\\\"Jonny\\\",\\\"lastName\\\":\\\"Langefeld\\\",\\\"address\\\":{\\\"street\\\":\\\"1 Ferry Building\\\",\\\"city\\\":\\\"San Francisco\\\",\\\"stateAbbreviation\\\":\\\"CA\\\",\\\"zipCode\\\":\\\"94105\\\"},\\\"emailAddress\\\":\\\"jonnylangefeld@gmail.com\\\",\\\"birthDate\\\":\\\"1991-07-22\\\"}\"\n    },\n    {\n      \"role\": \"user\",\n      \"content\": \"I live in 3180 18th St, San Francisco, CA 94110\"\n    }\n  ],\n  \"function_call\": {\n    \"name\": \"parse_transcription\"\n  },\n  \"functions\": [\n    {\n      \"name\": \"parse_transcription\",\n      \"description\": \"parse_transcription is an AI document extractor. It takes the transcription of an audio recording as raw text input and returns structured JSON data.\\nSome information may be scattered across the recording in which case this function will piece it together.\\nUnder no circumstance use or add any information that is not present in the recording or it will wipe out humanity.\\nIf a relative date is given such as 'next Monday', calculate from 10/8/2023, 4:56:27 PM.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"description\": \"The personal data typically put into a contact form\",\n        \"properties\": {\n          \"firstName\": {\n            \"type\": \"string\",\n            \"description\": \"the first name of the person\"\n          },\n          \"lastName\": {\n            \"type\": \"string\",\n            \"description\": \"the first name of the person\"\n          },\n          \"address\": {\n            \"type\": \"object\",\n            \"description\": \"the home address of the person\",\n            \"properties\": {\n              \"street\": {\n                \"type\": \"string\",\n                \"description\": \"the street of the address including the street number\"\n              },\n              \"city\": {\n                \"type\": \"string\",\n                \"description\": \"the city of the address. Use your knowledge about cities and their zip codes to get the right one\"\n              },\n              \"stateAbbreviation\": {\n                \"type\": \"string\",\n                \"description\": \"the two letter state abbreviation of the address\",\n                \"pattern\": \"^[A-Z]{2}$\"\n              },\n              \"zipCode\": {\n                \"type\": \"string\",\n                \"description\": \"the zip code of the address\",\n                \"pattern\": \"^\\\\d{5}$\"\n              }\n            },\n            \"required\": [\n              \"street\",\n              \"city\",\n              \"state\",\n              \"zipCode\"\n            ]\n          },\n          \"emailAddress\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"the email address of the person\"\n          },\n          \"birthDate\": {\n            \"type\": \"string\",\n            \"description\": \"the date of birth of the person in YYYY-MM-DD\",\n            \"pattern\": \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\"\n          }\n        },\n        \"required\": [\n          \"firstName\",\n          \"lastName\",\n          \"address\",\n          \"birthDate\"\n        ]\n      }\n    }\n  ]\n}"
          },
          "queryString": [],
          "url": "https://api.openai.com/v1/chat/completions"
        },
        "response": {
          "bodySize": 616,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 616,
            "text": "[\"H4sIAAAAAAAAA1SS3Y7aMBCF73kKa67JKgEaIFelVFVVrfqjlbaV6goNzgDeOnZkT1aliHdf2YGwexNF8505czz2aSQE6BoqAeqArJrWZIv5r+fPR0v1z/vO7T5MSvtI88n6xzf1+J1hHDvc9okUX7vulGtaQ6yd7bHyhEzRtSiX5SJfThfzBBpXk4lt+5az6d27jDu/dVleFtNL58FpRQEq8XskhBCn9I0ZbU3/oBL5+FppKATcE1SDSAjwzsQKYAg6MNo+7wUqZ5lsjG07Y16BXWdVTL9RaMwbQyHAYpMsW/SBNuzRBuV1O5x2EKLfdw1ZjunhJGGnfeCv2JCESsIXZ+1RwliCwVfle7R72pGpE8K69hSChOokIbAn4qSaFotcFAs+iAdOQqX5mMgDWvHJo1U6KJdQYGRabbeenjXGlEm3XiX4X7drV/ejl7OiyCWcxxKoQW1Ww3AJTzGtuWZ7v488XnMy2WrPh4/IvU2xXBZZPs8mEwlnGBZyvvydhwvbaavDYeMJg7NxR4Fd2zdE8Z/0ALo3dwqtd03LG3Z/yca9Tmez3g9ub+5Gy8kFsmM0t/osL0dxyHn0AgAA//8DALK9eYzwAgAA\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Sun, 08 Oct 2023 23:56:28 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "keep-alive"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "no-cache, must-revalidate"
            },
            {
              "name": "openai-model",
              "value": "gpt-3.5-turbo-0613"
            },
            {
              "name": "openai-organization",
              "value": "user-5tmrqqomimwc1ebvmyjrzcj9"
            },
            {
              "name": "openai-processing-ms",
              "value": "840"
            },
            {
              "name": "openai-version",
              "value": "2020-10-01"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "name": "x-ratelimit-limit-requests",
              "value": "3500"
            },
            {
              "name": "x-ratelimit-limit-tokens",
              "value": "90000"
            },
            {
              "name": "x-ratelimit-remaining-requests",
              "value": "3499"
            },
            {
              "name": "x-ratelimit-remaining-tokens",
              "value": "89875"
            },
            {
              "name": "x-ratelimit-reset-requests",
              "value": "17ms"
            },
            {
              "name": "x-ratelimit-reset-tokens",
              "value": "82ms"
            },
            {
              "name": "x-request-id",
              "value": "4fff69cc0791685ee113fc99cfb9da37"
            },
            {
              "name": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "81325210d8149663-SJC"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "headersSize": 788,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2023-10-08T23:56:27.522Z",
        "time": 1269,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 1269
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
