{
  "log": {
    "_recordingName": "extractStructuredData/complex example",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "6.0.6"
    },
    "entries": [
      {
        "_id": "55d89d2026cb52c5f2e9f463f5bfc5c1",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 1655,
          "cookies": [],
          "headers": [
            {
              "name": "accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "OpenAI/NodeJS/3.3.0"
            },
            {
              "name": "authorization",
              "value": "Bearer: test-token"
            },
            {
              "name": "content-length",
              "value": 1655
            },
            {
              "name": "host",
              "value": "api.openai.com"
            }
          ],
          "headersSize": 287,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"model\":\"gpt-3.5-turbo-0613\",\"messages\":[{\"role\":\"user\",\"content\":\"Act as a spelled out word finder. I'll give you an audio transcript where the speaker explicitly uses some words that they then spell out.\\nThis is typically in the form of '[original word] spelled [o r i g i n a l w o r d]'.\\n\\nExamples:\\n\\nJoseph spelled j o s e f\\nDanielle spelled d a n i e l l\\nNicholas spelled n i k o l a s\\n\\nfind words that are explicitly spelled out in the following text. Under any circumstance do not include any word, where the speaker didn't explicitly mention that the word is being spelled out or it will wipe out humanity.\\n\\n\\\"okay so my name is Johnny. Spelled j o n n y and I want to travel with my wife Mackenzie that spelled m c k e n z i e from any airport in and around San Francisco like SFO or Oakland or San Jose and you want to fly down to LA and do you want to travel next Wednesday through Sunday\\\"\"}],\"function_call\":{\"name\":\"extract_spelled_out_words\"},\"functions\":[{\"name\":\"extract_spelled_out_words\",\"description\":\"extract_spelled_out_words finds words that are explicitly spelled out as mentioned by the speaker\",\"parameters\":{\"type\":\"object\",\"properties\":{\"wordList\":{\"type\":\"array\",\"description\":\"List of original and spelled out word pairs\",\"items\":{\"type\":\"object\",\"description\":\"a pair between the original and the spelled out word\",\"properties\":{\"originalWord\":{\"type\":\"string\",\"description\":\"The original word in the transcript\"},\"spelledOutWord\":{\"type\":\"string\",\"description\":\"The spelled out version of the word. If the letters were separated by spaces, concatenate them into one word without spaces between letters\"}}}}}}}]}"
          },
          "queryString": [],
          "url": "https://api.openai.com/v1/chat/completions"
        },
        "response": {
          "bodySize": 733,
          "content": {
            "mimeType": "application/json",
            "size": 733,
            "text": "{\n  \"id\": \"chatcmpl-7jU9EILkRXkLqkxt9jZJbSv7zhmml\",\n  \"object\": \"chat.completion\",\n  \"created\": 1691075004,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\": \"assistant\",\n        \"content\": null,\n        \"function_call\": {\n          \"name\": \"extract_spelled_out_words\",\n          \"arguments\": \"{\\n  \\\"wordList\\\": [\\n    {\\n      \\\"originalWord\\\": \\\"Johnny\\\",\\n      \\\"spelledOutWord\\\": \\\"j o n n y\\\"\\n    },\\n    {\\n      \\\"originalWord\\\": \\\"Mackenzie\\\",\\n      \\\"spelledOutWord\\\": \\\"m c k e n z i e\\\"\\n    }\\n  ]\\n}\"\n        }\n      },\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 293,\n    \"completion_tokens\": 67,\n    \"total_tokens\": 360\n  }\n}\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Thu, 03 Aug 2023 15:03:27 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "733"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "no-cache, must-revalidate"
            },
            {
              "name": "openai-model",
              "value": "gpt-3.5-turbo-0613"
            },
            {
              "name": "openai-organization",
              "value": "user-5tmrqqomimwc1ebvmyjrzcj9"
            },
            {
              "name": "openai-processing-ms",
              "value": "2608"
            },
            {
              "name": "openai-version",
              "value": "2020-10-01"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "name": "x-ratelimit-limit-requests",
              "value": "3500"
            },
            {
              "name": "x-ratelimit-limit-tokens",
              "value": "90000"
            },
            {
              "name": "x-ratelimit-remaining-requests",
              "value": "3499"
            },
            {
              "name": "x-ratelimit-remaining-tokens",
              "value": "89775"
            },
            {
              "name": "x-ratelimit-reset-requests",
              "value": "17ms"
            },
            {
              "name": "x-ratelimit-reset-tokens",
              "value": "150ms"
            },
            {
              "name": "x-request-id",
              "value": "cf0a9764b17bb5342e8b8395be18b61e"
            },
            {
              "name": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "7f0f727a2d6715ae-SJC"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "headersSize": 754,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2023-08-03T15:03:24.373Z",
        "time": 2791,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 2791
        }
      },
      {
        "_id": "55d89d2026cb52c5f2e9f463f5bfc5c1",
        "_order": 1,
        "cache": {},
        "request": {
          "bodySize": 2065,
          "cookies": [],
          "headers": [
            {
              "name": "accept",
              "value": "application/json, text/plain, */*"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "user-agent",
              "value": "OpenAI/NodeJS/3.3.0"
            },
            {
              "name": "authorization",
              "value": "Bearer: test-token"
            },
            {
              "name": "content-length",
              "value": 2065
            },
            {
              "name": "host",
              "value": "api.openai.com"
            }
          ],
          "headersSize": 287,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\"model\":\"gpt-3.5-turbo-0613\",\"messages\":[{\"role\":\"user\",\"content\":\"parse the following transcription. Replace all original words with their spelled out word.\\n    \\n\\\"okay so my name is Johnny. Spelled j o n n y and I want to travel with my wife Mackenzie that spelled m c k e n z i e from any airport in and around San Francisco like SFO or Oakland or San Jose and you want to fly down to LA and do you want to travel next Wednesday through Sunday\\\"\"},{\"role\":\"function\",\"content\":\"{\\\"wordList\\\":[{\\\"originalWord\\\":\\\"Johnny\\\",\\\"spelledOutWord\\\":\\\"Jonny\\\"},{\\\"originalWord\\\":\\\"Mackenzie\\\",\\\"spelledOutWord\\\":\\\"Mckenzie\\\"}]}\",\"name\":\"replace_spelled_out_words\"}],\"function_call\":{\"name\":\"parse_transcription\"},\"functions\":[{\"name\":\"parse_transcription\",\"description\":\"parse_transcription is an AI document extractor. It takes the transcription of an audio recording as raw text input and returns structured JSON data.\\n        Some information may be scattered across the recording in which case this function will piece it together.\\n        If a relative date is given such as 'next Monday', calculate from 8/3/2023, 8:03:27 AM.\",\"parameters\":{\"type\":\"object\",\"properties\":{\"travelers\":{\"type\":\"array\",\"description\":\"List of travelers\",\"items\":{\"type\":\"object\",\"properties\":{\"name\":{\"type\":\"string\",\"description\":\"The name of the traveler. If it contains a spelled out version of the name, respond by concatenating the spelled out letters into one word.\"}}}},\"fromAirport\":{\"type\":\"array\",\"description\":\"List of airport codes for the departure airport\",\"items\":{\"type\":\"string\",\"description\":\"airport code. If a city is given, transform into the major airport code.\"}},\"toAirport\":{\"type\":\"array\",\"description\":\"List of airport codes for the destination airport\",\"items\":{\"type\":\"string\",\"description\":\"airport code. If a city is given, transform into the major airport code.\"}},\"fromDate\":{\"type\":\"string\",\"description\":\"The date of departure in the format YYYY-MM-DD\"},\"toDate\":{\"type\":\"string\",\"description\":\"The date of arrival in the format YYYY-MM-DD\"}}}}]}"
          },
          "queryString": [],
          "url": "https://api.openai.com/v1/chat/completions"
        },
        "response": {
          "bodySize": 762,
          "content": {
            "mimeType": "application/json",
            "size": 762,
            "text": "{\n  \"id\": \"chatcmpl-7jU9HfyMcM6SPYPIGovroH7vhctu3\",\n  \"object\": \"chat.completion\",\n  \"created\": 1691075007,\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"choices\": [\n    {\n      \"index\": 0,\n      \"message\": {\n        \"role\": \"assistant\",\n        \"content\": null,\n        \"function_call\": {\n          \"name\": \"parse_transcription\",\n          \"arguments\": \"{\\n  \\\"travelers\\\": [\\n    {\\n      \\\"name\\\": \\\"Jonny\\\"\\n    },\\n    {\\n      \\\"name\\\": \\\"Mckenzie\\\"\\n    }\\n  ],\\n  \\\"fromAirport\\\": [\\\"SFO\\\", \\\"OAK\\\", \\\"SJC\\\"],\\n  \\\"toAirport\\\": [\\\"LAX\\\"],\\n  \\\"fromDate\\\": \\\"2023-08-09\\\",\\n  \\\"toDate\\\": \\\"2023-08-13\\\"\\n}\"\n        }\n      },\n      \"finish_reason\": \"stop\"\n    }\n  ],\n  \"usage\": {\n    \"prompt_tokens\": 327,\n    \"completion_tokens\": 86,\n    \"total_tokens\": 413\n  }\n}\n"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Thu, 03 Aug 2023 15:03:31 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "content-length",
              "value": "762"
            },
            {
              "name": "connection",
              "value": "close"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "no-cache, must-revalidate"
            },
            {
              "name": "openai-model",
              "value": "gpt-3.5-turbo-0613"
            },
            {
              "name": "openai-organization",
              "value": "user-5tmrqqomimwc1ebvmyjrzcj9"
            },
            {
              "name": "openai-processing-ms",
              "value": "3496"
            },
            {
              "name": "openai-version",
              "value": "2020-10-01"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "name": "x-ratelimit-limit-requests",
              "value": "3500"
            },
            {
              "name": "x-ratelimit-limit-tokens",
              "value": "90000"
            },
            {
              "name": "x-ratelimit-remaining-requests",
              "value": "3499"
            },
            {
              "name": "x-ratelimit-remaining-tokens",
              "value": "89856"
            },
            {
              "name": "x-ratelimit-reset-requests",
              "value": "17ms"
            },
            {
              "name": "x-ratelimit-reset-tokens",
              "value": "96ms"
            },
            {
              "name": "x-request-id",
              "value": "64dc374b265e8637d184a8a4f4668a20"
            },
            {
              "name": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "7f0f728b99b715f7-SJC"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "headersSize": 753,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2023-08-03T15:03:27.192Z",
        "time": 3949,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 3949
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
