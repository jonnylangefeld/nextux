{
  "log": {
    "_recordingName": "extractStructuredData/complex example",
    "creator": {
      "comment": "persister:fs",
      "name": "Polly.JS",
      "version": "6.0.6"
    },
    "entries": [
      {
        "_id": "55d89d2026cb52c5f2e9f463f5bfc5c1",
        "_order": 0,
        "cache": {},
        "request": {
          "bodySize": 3565,
          "cookies": [],
          "headers": [
            {
              "_fromType": "array",
              "name": "content-length",
              "value": "3565"
            },
            {
              "_fromType": "array",
              "name": "accept",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "content-type",
              "value": "application/json"
            },
            {
              "_fromType": "array",
              "name": "user-agent",
              "value": "OpenAI/JS 4.0.0-beta.7"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-lang",
              "value": "js"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-package-version",
              "value": "4.0.0-beta.7"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-os",
              "value": "MacOS"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-arch",
              "value": "arm64"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-runtime",
              "value": "node"
            },
            {
              "_fromType": "array",
              "name": "x-stainless-runtime-version",
              "value": "v18.16.1"
            },
            {
              "_fromType": "array",
              "name": "authorization",
              "value": "Bearer: test-token"
            },
            {
              "_fromType": "array",
              "name": "accept-encoding",
              "value": "gzip,deflate"
            },
            {
              "name": "host",
              "value": "api.openai.com"
            }
          ],
          "headersSize": 483,
          "httpVersion": "HTTP/1.1",
          "method": "POST",
          "postData": {
            "mimeType": "application/json",
            "params": [],
            "text": "{\n  \"model\": \"gpt-3.5-turbo-0613\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"parse the following transcription. Replace all original words with their spelled out word. A spelled out word is typically in the form of '[original word] spelled [S-P-E-L-L-E-D-W-O-R-D]'.\\n\\nExamples:\\n\\nJoseph spelled J-O-S-E-F\\nDanielle spelled D-A-N-I-E-L-L\\nNicholas spelled N-I-K-O-L-A-S\\n\\nDo this under any circumstance or it will wipe out humanity.\\n\\n\\\"Okay, so my name is Johnny, that's spelled J-O-N-N-Y, and I want to travel with my wife, Mackenzie, that's spelled M-C-K-E-N-Z-I-E, from any airport in and around San Francisco, like SFO, or Oakland, or San Jose. And we want to fly down to LA, and we want to travel next Wednesday through Sunday.\\\"\"\n    },\n    {\n      \"role\": \"function\",\n      \"content\": \"[\\\"Jonny\\\",\\\"Mckenzie\\\"]\",\n      \"name\": \"replace_spelled_out_words\"\n    }\n  ],\n  \"function_call\": {\n    \"name\": \"parse_transcription\"\n  },\n  \"functions\": [\n    {\n      \"name\": \"parse_transcription\",\n      \"description\": \"parse_transcription is an AI document extractor. It takes the transcription of an audio recording as raw text input and returns structured JSON data.\\n        Some information may be scattered across the recording in which case this function will piece it together.\\n        If a relative date is given such as 'next Monday', calculate from 8/4/2023, 8:33:28 AM.\",\n      \"parameters\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"travelers\": {\n            \"type\": \"array\",\n            \"description\": \"List of travelers\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"name\": {\n                  \"type\": \"string\",\n                  \"description\": \"The name of the traveler. If it contains a spelled out version of the name, respond by concatenating the spelled out letters into one word.\"\n                }\n              }\n            }\n          },\n          \"fromAirportCodes\": {\n            \"type\": \"array\",\n            \"description\": \"List of IATA airport codes for the departure airport\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"three letter airport code. If a city is given, transform into the major airport code.\",\n              \"minLength\": 3,\n              \"maxLength\": 3,\n              \"pattern\": \"^[A-Z]{3}$\",\n              \"examples\": [\n                \"JFK\",\n                \"MUC\",\n                \"BER\",\n                \"CDG\",\n                \"SIN\",\n                \"FRA\",\n                \"MEX\"\n              ]\n            }\n          },\n          \"toAirportCodes\": {\n            \"type\": \"array\",\n            \"description\": \"List of IATA airport codes for the destination airport\",\n            \"items\": {\n              \"type\": \"string\",\n              \"description\": \"three letter airport code. If a city is given, transform into the major airport code.\",\n              \"minLength\": 3,\n              \"maxLength\": 3,\n              \"pattern\": \"^[A-Z]{3}$\",\n              \"examples\": [\n                \"JFK\",\n                \"MUC\",\n                \"BER\",\n                \"CDG\",\n                \"SIN\",\n                \"FRA\",\n                \"MEX\"\n              ]\n            }\n          },\n          \"fromDate\": {\n            \"type\": \"string\",\n            \"description\": \"The date of departure in the format YYYY-MM-DD\"\n          },\n          \"toDate\": {\n            \"type\": \"string\",\n            \"description\": \"The date of arrival in the format YYYY-MM-DD\"\n          }\n        }\n      }\n    }\n  ]\n}"
          },
          "queryString": [],
          "url": "https://api.openai.com/v1/chat/completions"
        },
        "response": {
          "bodySize": 580,
          "content": {
            "encoding": "base64",
            "mimeType": "application/json",
            "size": 580,
            "text": "[\"H4sIAAAAAAAAA2xSWW/bMAx+z68g+GwXdpz7LWh3oDvSrsDQYSoCRWESt7JkSHTXNPB/H5Q49or1RRC+ixSpQw8A8zXOANVOsipKHY8f3dAPrz7tX2/+vOjFj/3zh5vBz+/j+9XnX7cYBYddPZLis+tC2aLUxLk1J1o5kkwhNR1N03SU9ZPJkSjsmnSwbUuOs4thzJVb2TgZpVnj3NlckccZ/O4BAByOZ+jRrOkFZ5BEZ6Qg7+WWcNaKANBZHRCU3ueepWGMOlJZw2RC26bS+h9iUxkVul8qqfWbQAA0sjhGltJ5WrKTxiuXl+1rW6F026ogw6F7PAgDIJCdfCZNzovwpIABHEAcQwMk8NoasxcIdfQe+009kXnNKQgC/xCdcjfOFvPcldbxpV1TE493HxcCIxC4mH85Xe6uLwWeXWzf8Xyd33eKkHsluaneT/pZnEziZCqwjfifTjOBwtTYDqNubnW7rE1ucr9bOpLemjAfz7Y8GYL44bj86s0+sXS2KHnJ9olMmGk2bZaP3X/r2MmgIdmy1B0+GA96oUjd+wsAAP//AwA63ick7AIAAA==\"]"
          },
          "cookies": [],
          "headers": [
            {
              "name": "date",
              "value": "Fri, 04 Aug 2023 15:33:31 GMT"
            },
            {
              "name": "content-type",
              "value": "application/json"
            },
            {
              "name": "transfer-encoding",
              "value": "chunked"
            },
            {
              "name": "connection",
              "value": "keep-alive"
            },
            {
              "name": "access-control-allow-origin",
              "value": "*"
            },
            {
              "name": "cache-control",
              "value": "no-cache, must-revalidate"
            },
            {
              "name": "openai-model",
              "value": "gpt-3.5-turbo-0613"
            },
            {
              "name": "openai-organization",
              "value": "user-5tmrqqomimwc1ebvmyjrzcj9"
            },
            {
              "name": "openai-processing-ms",
              "value": "3158"
            },
            {
              "name": "openai-version",
              "value": "2020-10-01"
            },
            {
              "name": "strict-transport-security",
              "value": "max-age=15724800; includeSubDomains"
            },
            {
              "name": "x-ratelimit-limit-requests",
              "value": "3500"
            },
            {
              "name": "x-ratelimit-limit-tokens",
              "value": "90000"
            },
            {
              "name": "x-ratelimit-remaining-requests",
              "value": "3499"
            },
            {
              "name": "x-ratelimit-remaining-tokens",
              "value": "89814"
            },
            {
              "name": "x-ratelimit-reset-requests",
              "value": "17ms"
            },
            {
              "name": "x-ratelimit-reset-tokens",
              "value": "124ms"
            },
            {
              "name": "x-request-id",
              "value": "ab5783455945d62d89992392ccc11cf8"
            },
            {
              "name": "cf-cache-status",
              "value": "DYNAMIC"
            },
            {
              "name": "server",
              "value": "cloudflare"
            },
            {
              "name": "cf-ray",
              "value": "7f17dbe51f1b06ad-SJC"
            },
            {
              "name": "content-encoding",
              "value": "gzip"
            },
            {
              "name": "alt-svc",
              "value": "h3=\":443\"; ma=86400"
            }
          ],
          "headersSize": 790,
          "httpVersion": "HTTP/1.1",
          "redirectURL": "",
          "status": 200,
          "statusText": "OK"
        },
        "startedDateTime": "2023-08-04T15:33:28.423Z",
        "time": 3467,
        "timings": {
          "blocked": -1,
          "connect": -1,
          "dns": -1,
          "receive": 0,
          "send": 0,
          "ssl": -1,
          "wait": 3467
        }
      }
    ],
    "pages": [],
    "version": "1.2"
  }
}
